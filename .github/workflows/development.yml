name: Deploy Docker Compose

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup SSH key
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SERVER_SSH_KEY }}

      - name: Deploy on EC2
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
            set -e  # Exit on error

            DEPLOY_DIR=~/deployments/web_scraping_chatbot
            mkdir -p $DEPLOY_DIR
            cd $DEPLOY_DIR

            # Clone or update repo
            if [ ! -d ".git" ]; then
              git clone https://github.com/arpitkumar20/Web_Scraping_ChatBot.git .
            else
              git fetch origin
              git reset --hard origin/main
            fi

            # Update .env
            ENV_FILE=backend/.env
            echo "Replacing ENV_OPENAI_API_KEY â†’ ${{ vars.DEV_OPENAI_API_KEY }}"
            sed -i "s|ENV_OPENAI_API_KEY|${{ vars.DEV_OPENAI_API_KEY }}|g" $ENV_FILE

            ENV_FILE=backend/.env
            # Remove old line if exists
            grep -v '^ENV_OPENAI_API_KEY=' $ENV_FILE > $ENV_FILE.tmp || true
            mv $ENV_FILE.tmp $ENV_FILE
            # Append new value
            echo "ENV_OPENAI_API_KEY=${{ vars.DEV_OPENAI_API_KEY }}" >> $ENV_FILE

            # Ensure docker-compose is installed
            if ! command -v docker-compose &> /dev/null; then
              sudo curl -L "https://github.com/docker/compose/releases/download/v2.20.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
            fi

            sudo docker-compose down
            sudo docker-compose up -d --build
          EOF